python Parameter_Selection/model_loader.py --agent_path Agent_Storage/LavaTests/NoDeath/0.100_penalty/0.100_penalty-v6 --test_forward

============================================================
MODEL SUMMARY
============================================================
Agent type: DQN
Device: cpu
Total parameters: 15,493
Trainable parameters: 15,493

Observation space: Dict('MLP_input': Box(-inf, inf, (106,), float32))
Action space: Discrete(5)

Model architecture:
QNetwork(
  (features_extractor): CustomCombinedExtractor(
    (mlp): Sequential(
      (0): Linear(in_features=106, out_features=64, bias=True)
      (1): ReLU()
    )
  )
  (q_net): Sequential(
    (0): Linear(in_features=64, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=64, bias=True)
    (3): ReLU()
    (4): Linear(in_features=64, out_features=5, bias=True)
  )
)

============================================================
STATE_DICT SUMMARY
============================================================
features_extractor.mlp.0.weight                    torch.Size([64, 106])      6,784 params
features_extractor.mlp.0.bias                      torch.Size([64])             64 params
q_net.0.weight                                     torch.Size([64, 64])      4,096 params
q_net.0.bias                                       torch.Size([64])             64 params
q_net.2.weight                                     torch.Size([64, 64])      4,096 params
q_net.2.bias                                       torch.Size([64])             64 params
q_net.4.weight                                     torch.Size([5, 64])         320 params
q_net.4.bias                                       torch.Size([5])               5 params

Total parameters in state_dict: 15,493

Model ready for use: <class 'stable_baselines3.dqn.policies.QNetwork'>
You can now call model.state_dict() to inspect parameters

Testing forward pass with batch_size=1...
âœ“ Forward pass successful!
  Input shape: {'MLP_input': torch.Size([1, 106])}
  Output shape: torch.Size([1, 5])
  Output range: [0.5773, 0.9213]
  